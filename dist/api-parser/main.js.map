{"version":3,"sources":["./src/app/creator/creator.component.ts","./src/app/creator/creator.component.html","./src/app/content/content.component.ts","./src/app/content/content.component.html","./src/app/displayer/display-list-item/display-list-item.component.ts","./src/app/displayer/display-list-item/display-list-item.component.html","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/displayer/displayer.component.ts","./src/app/displayer/displayer.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/content-two/content-two.component.ts","./src/app/content-two/content-two.component.html","./src/app/models/data-field.ts","./src/app/app-routing.module.ts","./src/app/creator/entry-list-item/entry-list-item.component.ts","./src/app/creator/entry-list-item/entry-list-item.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;;;;;;ICiB/C,0FAA2F;IAAtE,2WAAqB;IAAiD,4DAAsB;;ADV5G,MAAM,gBAAgB;IAI3B;QAFA,eAAU,GAAiB,EAAE,CAAC;IAEd,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,4DAAS,CAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,KAAK,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IACD,UAAU,CAAC,CAAQ;QACjB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;;gFAfU,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEACE;QAAA,4EAA8D;QAAA,8EAAc;QAAA,4DAAS;QAErF,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,uEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAA8D;QAAA,4EAAiB;QAAA,4DAAO;QACxF,4DAAM;QACN,uEACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,uEAAW;QAAA,4DAAQ;QACtD,uEAEF;QAAA,4DAAM;QACN,6EAAmE;QAArB,yIAAS,cAAU,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAC7F,4DAAO;QACP,+IAAiH;QACnH,4DAAM;;QAD6D,2DAAc;QAAd,mFAAc;;6FDVpE,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAA2B;QAC3B,2EAA+B;;6FDMlB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICsBvD,qFAOsB;;;IANtB,mFAAuB;;ADflB,MAAM,wBAAwB;IAQnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGAXU,wBAAwB;wGAAxB,wBAAwB;QCRrC,yEACE;QAAA,yEACE;QAAA,qEACE;QAAA,uDACF;QAAA,4DAAK;QACP,4EAAgE;QAAA,uEAAY;QAAA,4DAAS;QACrF,4DAAM;QACN,uEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAA8D;QAAA,6EAAiB;QAAA,4DAAO;QACxF,4DAAM;QACN,uEAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,uEAAW;QAAA,4DAAQ;QACtD,uEAEF;QAAA,4DAAM;QACN,8EAA8C;QAAA,2EAAe;QAAA,4DAAS;QACxE,4DAAO;QACP,uJAOsB;QACxB,4DAAM;;QA3BA,0DACF;QADE,oFACF;QAQS,0DAAgB;QAAhB,sFAAgB;QAKhB,0DAAuB;QAAvB,6FAAuB;QAUX,0DAAe;QAAf,mFAAe;;6FDnB3B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;sCAIU,UAAU;kBAAlB,mDAAK;YACG,IAAI;kBAAZ,mDAAK;YACG,WAAW;kBAAnB,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAA2C;;AAOpC,MAAM,WAAW;IAItB;QAFA,cAAS,GAAgB,EAAE,CAAC;IAEZ,CAAC;IAEjB,YAAY,CAAC,MAAgB;QAC3B,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAChC;gBACE,IAAI,EAAC,MAAM;gBACX,WAAW,EAAC,wBAAwB;gBACpC,MAAM,EAAC;oBACL,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC;oBACzD,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,SAAS,EAAC,QAAQ,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC;iBAC5D;aACF;YACD;gBACE,IAAI,EAAC,SAAS;gBACd,WAAW,EAAC,2BAA2B;gBACvC,MAAM,EAAC;oBACL,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC;oBAC5D,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC;iBAC5D;aACF;SACF,CAAC;IACJ,CAAC;IACD,WAAW,CAAC,CAAY;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;;sEA5BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEACA;QAAA,2EAA+B;QAC/B,4DAAM;;6FDIO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACa;AACG;AACM;AACwB;AACQ;AACtC;AACW;;AAqBnE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBAhBlB,2DAAY;QACZ,wEAAe;QACf,2EAAgB;QAChB,iFAAkB;QAClB,yGAAsB;QACtB,iHAAwB;QACxB,2EAAgB;QAChB,uFAAmB,aAGnB,uEAAa;QACb,oEAAgB;6FAKP,SAAS;cAlBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,2EAAgB;oBAChB,iFAAkB;oBAClB,yGAAsB;oBACtB,iHAAwB;oBACxB,2EAAgB;oBAChB,uFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;;;;;;ICA5E,sFAI6D;;;IAH5D,kFAAsB;;ADQhB,MAAM,kBAAkB;IAI7B,YAAoB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAFtC,cAAS,GAAgB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAEZ,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;;oFATU,kBAAkB;kGAAlB,kBAAkB;QCT/B,kJAI6D;;QAAtC,kFAAY;;6FDKtB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,sEACE;QAAA,sEACE;QAAA,yEACE;QAAA,qEACE;QAAA,qEACE;QAAA,uEAAqB;QAAA,qEAAU;QAAA,4DAAI;QACrC,4DAAK;QACL,qEACE;QAAA,uEAAmB;QAAA,kEAAO;QAAA,4DAAI;QAChC,4DAAK;QACP,4DAAK;QACP,4DAAM;QACN,0EACE;QAAA,6EACE;QAAA,yEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDXO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,oEAAG;QAAA,6EAAkB;QAAA,4DAAI;;6FDOZ,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,SAAS;IAKpB,YAAc,IAAa,EACzB,IAAa,EACb,QAAkB,EAClB,SAAmB,IAAE,CAAC;CACzB;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEmB;AACX;;;AAE/D,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,2EAAgB,EAAC;IACpC,EAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,2EAAgB,EAAC;IAC7C,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,sFAAmB,EAAC;CAC/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAA6C;AACoB;;;;ICOvD,6EAA4D;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;ADAvE,MAAM,sBAAsB;IAkBjC;QAXU,QAAG,GAAG,IAAI,0DAAY,EAAE,CAAC;QACnC,cAAS,GAAc;YACrB,QAAQ,EAAC,SAAS;YAClB,SAAS,EAAC,MAAM;YAChB,MAAM,EAAC,WAAW;YAClB,iBAAiB,EAAC,cAAc;YAChC,WAAW,EAAC,OAAO;YACnB,EAAE,EAAC,EAAE;YACL,EAAE,EAAC,EAAE;YACL,EAAE,EAAC,EAAE;SACN;IACe,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;;4FAzBU,sBAAsB;sGAAtB,sBAAsB;QCRnC,yEACE;QAAA,uEACE;QAAA,yEACE;QAAA,yEACE;QAAA,sEACF;QAAA,4DAAM;QACN,yEACE;QAAA,4EACE;QAAA,wHAA6E;QAC/E,4DAAS;QACX,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,uEACA;QAAA,4EAAsD;QAAA,oEAAQ;QAAA,4DAAQ;QACxE,4DAAM;QACN,0EACE;QAAA,wEACA;QAAA,6EAAsD;QAAA,qEAAS;QAAA,4DAAQ;QACzE,4DAAM;QACN,4DAAM;QACN,8EAAoE;QAA5D,+IAAS,gBAAY,IAAC;QAAsC,6DAAC;QAAA,4DAAS;QAClF,4DAAM;QACR,4DAAO;QACT,4DAAM;;QApBqB,0DAAgB;QAAhB,sFAAgB;QAIR,0DAAa;QAAb,kFAAa;QAK/B,0DAAsB;QAAtB,iFAAsB;QAItB,0DAAsB;QAAtB,iFAAsB;;6FDT1B,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;sCAGU,IAAI;kBAAZ,mDAAK;YACG,IAAI;kBAAZ,mDAAK;YACG,QAAQ;kBAAhB,mDAAK;YACG,QAAQ;kBAAhB,mDAAK;YAEI,GAAG;kBAAZ,oDAAM;;;;;;;;;;;;;;AEfT;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataField } from '../models/data-field';\n\n@Component({\n  selector: 'app-creator',\n  templateUrl: './creator.component.html',\n  styleUrls: ['./creator.component.css']\n})\nexport class CreatorComponent implements OnInit {\n\n  dataFields : DataField[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addField(){\n    this.dataFields.push(new DataField(\"\",\"\",false,false));\n    console.log(\"There are \" + this.dataFields.length);\n  }\n  deleteItem(i:number){\n    this.dataFields.splice(i,1);\n  }\n}\n","<div class=\"card-float\">\n  <button id=\"record-btn\" type=\"button\" class=\"btn btn-success\">âœ“ Save changes</button>\n\n  <h1>Create new entry:</h1>\n  <form>\n    <div class=\"name input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Name of component</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"formGroupExampleInput\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\"\n        placeholder=\"Enter component's description here\">\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"addField()\">+ Add Component</button>\n  </form>\n  <app-entry-list-item (del)=\"deleteItem(i)\" *ngFor=\"let dataField of dataFields;index as i\"></app-entry-list-item>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-creator></app-creator>\n<app-displayer></app-displayer>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DataField } from 'src/app/models/data-field';\n\n@Component({\n  selector: 'app-display-list-item',\n  templateUrl: './display-list-item.component.html',\n  styleUrls: ['./display-list-item.component.css']\n})\nexport class DisplayListItemComponent implements OnInit {\n\n\n  @Input() dataFields : DataField[];\n  @Input() name : string;\n  @Input() description : string;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n  <div class = \"desc\">\n    <h2>\n      {{name}}\n    </h2>\n  <button type=\"button\" id=\"edit\" class=\"btn btn-outline-primary\">Confirm Edit</button>\n  </div>\n  <form>\n    <div class=\"name input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Name of component</span>\n      </div>\n      <input value=\"{{name}}\" type=\"text\" class=\"form-control\" aria-label=\"Default\"\n        aria-describedby=\"inputGroup-sizing-default\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"formGroupExampleInput\">Description</label>\n      <input value=\"{{description}}\" type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\"\n        placeholder=\"Enter component's description here\">\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\">+ Add Component</button>\n  </form>\n  <app-entry-list-item\n  [name]=\"dataField.name\"\n  [type]=\"dataField.type\"\n  [optional] = \"dataField.optional\"\n  [exlusive] = \"dataField.exclusive\"\n   *ngFor=\"let dataField of dataFields; index as i\">\n\n  </app-entry-list-item>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { DataField } from './models/data-field';\nimport { DataType } from './models/data-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  dataTypes : DataType[] = [];\n\n  constructor() { }\n\n  getDataTypes(isTest : boolean) : DataType[]{\n    return !isTest ? this.dataTypes : [\n      {\n        name:\"Chat\",\n        description:\"Literally just a chat.\",\n        fields:[\n          {name:\"text\",type:\"string\",optional:false,exclusive:true},\n          {name:\"userID\",type:\"integer\",optional:true,exclusive:true}\n        ]\n      },\n      {\n        name:\"Message\",\n        description:\"Literally just a message.\",\n        fields:[\n          {name:\"sticker\",type:\"string\",optional:true,exclusive:false},\n          {name:\"userID\",type:\"string\",optional:false,exclusive:true}\n        ]\n      },\n    ];\n  }\n  addDataType(x : DataType){\n    this.dataTypes.push(x);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'api-parser';\n}\n","<app-navbar></app-navbar>\n<div style=\"padding: 48px;\">\n<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CreatorComponent } from './creator/creator.component';\nimport { DisplayerComponent } from './displayer/displayer.component';\nimport { EntryListItemComponent } from './creator/entry-list-item/entry-list-item.component';\nimport { DisplayListItemComponent } from './displayer/display-list-item/display-list-item.component';\nimport { ContentComponent } from './content/content.component';\nimport { ContentTwoComponent } from './content-two/content-two.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CreatorComponent,\n    DisplayerComponent,\n    EntryListItemComponent,\n    DisplayListItemComponent,\n    ContentComponent,\n    ContentTwoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { DataType } from '../models/data-type';\n\n@Component({\n  selector: 'app-displayer',\n  templateUrl: './displayer.component.html',\n  styleUrls: ['./displayer.component.css']\n})\nexport class DisplayerComponent implements OnInit {\n\n  dataTypes : DataType[] = this.data.getDataTypes(true);\n\n  constructor(private data : DataService) { }\n\n  ngOnInit(): void {\n    this.dataTypes = this.data.getDataTypes(true);\n    console.log(this.dataTypes.length);\n  }\n}\n","<app-display-list-item\n [name]=\"dataType.name\"\n [description]=\"dataType.description\"\n [dataFields]=\"dataType.fields\"\n  *ngFor=\"let dataType of dataTypes\"></app-display-list-item>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n  <div>\n    <div class=\"nav-center\">\n      <ul>\n        <li>\n          <a href=\"/datatypes\">Data Types</a>\n        </li>\n        <li>\n          <a href=\"/methods\">Methods</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"nav-options\">\n      <Button class=\"export btn\">\n        Export JSON\n      </Button>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content-two',\n  templateUrl: './content-two.component.html',\n  styleUrls: ['./content-two.component.css']\n})\nexport class ContentTwoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>content-two works!</p>\n","export class DataField{\r\n  name : string;\r\n  type : string;\r\n  optional : boolean;\r\n  exclusive : boolean;\r\n  constructor(  name : string,\r\n    type : string,\r\n    optional : boolean,\r\n    exclusive : boolean){}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ContentTwoComponent } from './content-two/content-two.component';\nimport { ContentComponent } from './content/content.component';\n\nconst routes: Routes = [\n  {path:'',component:ContentComponent},\n  {path:'datatypes',component:ContentComponent},\n  {path:'methods',component:ContentTwoComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { EventEmitter } from '@angular/core';\nimport { Component, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-entry-list-item',\n  templateUrl: './entry-list-item.component.html',\n  styleUrls: ['./entry-list-item.component.css']\n})\nexport class EntryListItemComponent implements OnInit {\n\n  @Input() name : string;\n  @Input() type : string;\n  @Input() optional : boolean;\n  @Input() exlusive : boolean;\n\n  @Output() del = new EventEmitter();\n  datatypes : string[] = [\n    \"String\",\"Boolean\",\n    \"Integer\",\"User\",\n    \"Chat\",\"ChatPhoto\",\n    \"ChatPermissions\",\"ChatLocation\",\n    \"Animation\",\"Audio\",\n    \"\",\"\",\n    \"\",\"\",\n    \"\",\"\",\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  deleteItem(){\n    this.del.emit(\"\");\n  }\n}\n","<div class=\"card\">\n  <form>\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <input type=\"text\" value=\"{{name}}\" class=\"form-control\" placeholder=\"Field name\">\n      </div>\n      <div class=\"col\">\n        <select class=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\" style=\"margin: 0px;\">\n          <option *ngFor=\"let data of datatypes;index as i\" value=\"i\">{{data}}</option>\n        </select>\n      </div>\n      <div class=\"col\" class=\"checkboxes\">\n        <div class=\"form-check form-check-inline\">\n          <input [checked] = \"optional\" class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\n          <label class=\"form-check-label\" for=\"inlineCheckbox1\">Optional</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input [checked] = \"exlusive\" class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\n          <label class=\"form-check-label\" for=\"inlineCheckbox2\">Exclusive</label>\n        </div>\n        </div>\n        <button (click)=\"deleteItem()\" type=\"button\" class=\"btn btn-danger\">X</button>\n    </div>\n  </form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}