{"version":3,"sources":["./src/app/creator/creator.component.ts","./src/app/creator/creator.component.html","./src/app/content/content.component.ts","./src/app/content/content.component.html","./src/app/smaller-components/footer/footer.component.ts","./src/app/smaller-components/footer/footer.component.html","./src/app/displayer/display-list-item/display-list-item.component.ts","./src/app/displayer/display-list-item/display-list-item.component.html","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/method-creator/parameter-list-item/parameter-list-item.component.ts","./src/app/method-creator/parameter-list-item/parameter-list-item.component.html","./src/app/smaller-components/search-box/search-box.component.ts","./src/app/app.module.ts","./src/app/displayer/displayer.component.ts","./src/app/displayer/displayer.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/content-two/content-two.component.ts","./src/app/content-two/content-two.component.html","./src/app/method-creator/method-creator.component.ts","./src/app/method-creator/method-creator.component.html","./src/app/app-routing.module.ts","./src/app/creator/entry-list-item/entry-list-item.component.ts","./src/app/creator/entry-list-item/entry-list-item.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;;;;;;;ICItD,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,iGACF;;;;IAeF,0FAAwI;IAAjG,yXAA0B;IAAuE,4DAAsB;;IAAzI,0EAAiB;;ADRjC,MAAM,gBAAgB;IAa3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAV5C,eAAU,GAAgB,EAAE,CAAC;QAM7B,SAAI,GAAgB,EAAE,CAAC;IAIyB,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,EAAE;SACd,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IACD,IAAI;QACF,IAAI,GAAG,GAAa,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE;QAEzF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IAEjB,CAAC;IACD,UAAU,CAAC,CAAS;QAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,CAAS,EAAE,SAAoB;QACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC3B,CAAC;;gFArDU,gBAAgB;gGAAhB,gBAAgB;QCd7B,yEAEE;QAAA,qEAAI;QAAA,gFAAqB;QAAA,4DAAK;QAE9B,uEACE;QAAA,4GAEM;QACR,4EAAgF;QAA1D,wIAAU,UAAM,IAAC;QAAyC,8EAAc;QAAA,4DAAS;QAErG,yEACE;QAAA,yEACE;QAAA,0EAA8D;QAAA,6EAAiB;QAAA,4DAAO;QACxF,4DAAM;QACN,4EACF;QADS,mLAAkB;QAAzB,4DACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,uEAAW;QAAA,4DAAQ;QACtD,4EAEF;QAFS,0LAAyB;QAAhC,4DAEF;QAAA,4DAAM;QACR,4DAAO;QACP,+IAA8J;QAC9J,8EAAmE;QAArB,yIAAS,cAAU,IAAC;QAAC,uEAAW;QAAA,4DAAS;QAEzF,4DAAM;;QApBqB,0DAAS;QAAT,+EAAS;QASvB,0DAAkB;QAAlB,6EAAkB;QAIlB,0DAAyB;QAAzB,oFAAyB;QAI0E,0DAAc;QAAd,mFAAc;;6FDRjH,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAA2B;QAC3B,2EAA+B;;6FDMlB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACE;QAAA,sEACE;QAAA,uEAAM;QAAA,wFAA6B;QAAA,4DAAO;QAC5C,4DAAM;QACR,4DAAM;;6FDGO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;ICwB3E,0FAEA;IADmC,wYAA0B;IAC7D,4DAAsB;;;;IAFD,mFAAqB;;;;IAvB5C,sEACE;IAAA,yEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,4EAA8E;IAAxD,4TAAqB;IAAmC,uEAAY;IAAA,4DAAS;IACnG,4EAAiF;IAA3D,8TAAuB;IAAoC,iEAAM;IAAA,4DAAS;IAClG,4DAAM;IACN,uEACE;IAAA,yEACE;IAAA,0EACE;IAAA,2EAA8D;IAAA,6EAAiB;IAAA,4DAAO;IACxF,4DAAM;IACN,4EAEF;IAFS,sVAAkB;IAAzB,4DAEF;IAAA,4DAAM;IACN,0EACE;IAAA,6EAAmC;IAAA,uEAAW;IAAA,4DAAQ;IACtD,6EAEF;IAFS,6VAAyB;IAAhC,4DAEF;IAAA,4DAAM;IACN,8EAA8C;IAAA,2EAAe;IAAA,4DAAS;IACxE,4DAAO;IACP,6JAEsB;IACxB,4DAAM;;;IAvBA,0DACF;IADE,uFACF;IAS4B,2DAAgB;IAAhB,yFAAgB;IAAnC,gFAAkB;IAKQ,0DAAuB;IAAvB,gGAAuB;IAAjD,uFAAyB;IAMgD,0DAAe;IAAf,sFAAe;;;IAW7F,2EACE;IAAA,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,sGACF;;;;IASJ,0FAEA;IADmC,mZAA0B;IAC7D,4DAAsB;;;;IAFD,oFAAqB;;;;IAjB5C,sEACE;IAAA,yEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,0EACE;IAAA,mIAEO;IACT,4DAAM;IAEN,6EAAsF;IAAhE,sUAAqB;IAA2C,+DAAI;IAAA,4DAAS;IACnG,6EAAyF;IAAnE,wUAAuB;IAA4C,uDAAmB;IAAA,4DAAS;IACvH,4DAAM;IACN,wEACE;IAAA,qEAAG;IAAA,wDAAe;IAAA,4DAAI;IACxB,4DAAO;IACP,mKAEsB;IACxB,4DAAM;;;IAjBA,0DACF;IADE,wFACF;IAEuC,0DAAgB;IAAhB,oFAAgB;IAMkC,0DAAmB;IAAnB,wFAAmB;IAGzG,0DAAe;IAAf,oFAAe;IAGgE,0DAAe;IAAf,uFAAe;;;IAnBvG,sEACE;IAAA,2HAoBM;IACR,4DAAM;;;IArBE,0DAAa;IAAb,gFAAa;;ADlBhB,MAAM,wBAAwB;IAkBnC,YAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;QAf/B,iBAAY,GAAY,KAAK,CAAC;QAUvC,kBAAa,GAAY,KAAK,CAAC;QAErB,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEQ,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAClC,IAAI,CAAC,IAAe,CAAC,UAAU,CAAC,CAAC;YACjC,IAAI,CAAC,IAAiB,CAAC,MAAM,CAAC;QAEjC,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAExB;IAEH,CAAC;IAED,SAAS;QAEP,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;aACI;YACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CACZ;gBACE,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,MAAM,EAAE,IAAI,CAAC,UAAU;aACxB,CAAC,CAAC;YACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAClD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aACI;YACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IAEH,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,KAAK,EAAE,SAAS;QACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;IACrC,CAAC;;gGApEU,wBAAwB;wGAAxB,wBAAwB;QCZrC,yEACE;QAAA,qHA0BM;QAEN,oHAsBM;QACR,4DAAM;;QAnDE,0DAAc;QAAd,8EAAc;QA4Bd,0DAAa;QAAb,6EAAa;;6FDjBR,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;wGAGU,IAAI;kBAAZ,mDAAK;YACG,YAAY;kBAApB,mDAAK;YAGG,UAAU;kBAAlB,mDAAK;YACG,IAAI;kBAAZ,mDAAK;YACG,WAAW;kBAAnB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YAEG,OAAO;kBAAf,mDAAK;YAII,MAAM;kBAAf,oDAAM;YACG,IAAI;kBAAb,oDAAM;;;;;;;;;;;;;;AE5BT;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAC;QACP,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,kCAAkC;QAC9C,WAAW,EAAE,sDAAsD;QACnE,SAAS,EAAE,kBAAkB;QAC7B,aAAa,EAAE,8BAA8B;QAC7C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AACF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACxBJ;AACpB;;;;AAO3C,MAAM,WAAW,GAAG,4CAA4C,CAAC;AACjE,MAAM,UAAU,GAAG,4CAA4C,CAAC;AAChE,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,IAAI,gEAAW,EAAE;SACvB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;SACvC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC;SAC1B,GAAG,CAAC,YAAY,EAAE,8DAA8D,CAAC;CACrF;AAIM,MAAM,WAAW;IAWtB,YAAoB,IAAgB,EAAU,QAA6B;QAAvD,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAqB;IAAI,CAAC;IAThF,cAAc,CAAC,KAAc;QACzB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QACzH,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAOD,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE;aACxC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IAED,aAAa,CAAC,GAAuB;QACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,YAAY,EAAE;aAClD,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAkB,CAAC;YACpC,GAAG,CAAC,IAAI,CAAC;QACX,CAAC,CAAC;IACN,CAAC;IAEK,eAAe;;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;iBACrC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAElD,+FAA+F;YAC/F,gCAAgC;YAChC,yBAAyB;YACzB,mBAAmB;YACnB,QAAQ;QACV,CAAC;KAAA;IAED,YAAY,CAAC,KAAa,EAAE,QAAkB;QAC5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IAEzB,CAAC;IACD,WAAW,CAAC,CAAW;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,mDAAmD;IAE7C,WAAW,CAAC,GAAwB;;YACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE;iBAChD,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,IAAgB,CAAC;gBAChC,GAAG,CAAC,IAAI,CAAC;YACX,CAAC,CAAC;YACJ,4DAA4D;YAC5D,gCAAgC;YAChC,yBAAyB;YACzB,2BAA2B;YAC3B,mBAAmB;YACnB,QAAQ;QACV,CAAC;KAAA;IAEK,aAAa;;YACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;iBACnC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,CAAC;KAAA;IAED,UAAU,CAAC,KAAa,EAAE,MAAc;QACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IACD,SAAS,CAAC,CAAS;QACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IACD,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IACD,iBAAiB,CAAC,GAA0B;QAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YACxB,IAAI,WAAW,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC;iBACvD,MAAM,CACJ,IAAmB;iBACjB,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAElC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;;sEAjHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,YAAY;IAIvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QADlC,UAAK,GAAG,YAAY,CAAC;QAEnB,0DAA0D;IAC5D,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,YAAY,CAAC;IAC/E,CAAC;;wEAZU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,2EAAiD;QACjD,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACN,wEAAyB;QAC3B,4DAAM;;QALQ,0DAAuB;QAAvB,oFAAuB;;6FDOxB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;ICgBJ,2EACzD;IAAA,uDAAiB;IAAA,4DAAO;;;IAAxB,0DAAiB;IAAjB,+FAAiB;;;IAKrB,yEAA4C;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;;;IA8BtD,4EAEF;IAF0B,yWAA4B;IAApD,4DAEF;;;IAF0B,0FAA4B;;;;IAnD9D,yEACE;IAAA,sEACE;IAAA,yEACE;IAAA,yEACE;IAAA,2EAEF;IAFqB,sVAAkB;IAArC,4DAEF;IAAA,4DAAM;IACN,yEACE;IAKA,yEACE;IAAA,yEACE;IAAA,2EAAyD;IAAA,+DAAI;IAAA,gIACjC;IAAA,4DAAQ;IACtC,4DAAM;IACN,6EAEA;IAFO,6VAAsB;IAA7B,4DAEA;IAAA,gFACE;IAAA,qIAA6D;IAC7D,iEACF;IAAA,4DAAW;IACX,2EACE;IAAA,8EAAwE;IAAhE,4TAAe;IAAiD,6DAAC;IAAA,4DAAS;IACpF,4DAAM;IAMR,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,2EACE;IAAA,6EAEA;IAFO,gUAAmB;IAA1B,4DAEA;IAAA,6EAAsD;IAAA,oEAAQ;IAAA,4DAAQ;IACxE,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,6EAEA;IAFO,gUAAmB;IAA1B,4DAEA;IAAA,6EAAgE;IAAA,qEAAS;IAAA,4DAAQ;IACnF,4DAAM;IACR,4DAAM;IACN,mIAEF;IAAA,4DAAM;IAOR,4DAAM;IACN,8EAAoE;IAA5D,mUAAsB;IAAsC,6DAAC;IAAA,4DAAS;IAChF,4DAAM;IAEN,0EACE;IAAA,6EAEF;IAFqB,gWAAyB;IAA5C,4DAEF;IAAA,4DAAM;IAER,4DAAM;IACR,4DAAM;;;IAlE2D,0DAAgB;IAAhB,yFAAgB;IAAtD,gFAAkB;IAWgD,0DAAmB;IAAnB,wFAAmB;IAG5B,0DAAmC;IAAnC,8GAAmC;IAAtG,oFAAsB;IAGF,0DAAiB;IAAjB,0FAAiB;IAgBf,0DAAsB;IAAtB,oFAAsB;IASpB,0DAAsB;IAAtB,oFAAsB;IAK7C,0DAAc;IAAd,iFAAc;IAcsC,0DAAuB;IAAvB,gGAAuB;IAApE,uFAAyB;;;IAmB5C,2EAAgD;IAAA,mEAAQ;IAAA,4DAAO;;;IAC/D,2EAAgD;IAAA,uDAA6B;IAAA,4DAAO;;;IAApC,0DAA6B;IAA7B,2GAA6B;;;IAdnF,sEAEE;IAAA,yEACE;IAAA,yEACE;IAAA,uEAAM;IAAA,uDAAQ;IAAA,4DAAO;IACvB,4DAAM;IACN,yEACE;IAAA,wEAA8B;IAAA,uDAAe;IAAA,4DAAI;IACnD,4DAAM;IACN,0EACE;IAAA,sEAAK;IAAA,wDAAQ;IAAA,4DAAM;IACrB,4DAAM;IACN,2EACE;IAAA,iIAA+D;IAC/D,iIAAoF;IACtF,4DAAM;IACR,4DAAM;IAER,4DAAM;;;IAdM,0DAAQ;IAAR,4EAAQ;IAGgB,0DAAe;IAAf,mFAAe;IAGxC,0DAAQ;IAAR,4EAAQ;IAGN,0DAAc;IAAd,iFAAc;IACd,0DAAc;IAAd,iFAAc;;AD5EtB,MAAM,0BAA0B;IA4BrC,0BAA0B;IAC1B,yBAAyB;IACzB,uBAAuB;IACvB,yBAAyB;IACzB,uCAAuC;IACvC,0BAA0B;IAC1B,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,IAAI;IACJ,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAnC5B,SAAI,GAAG,EAAE,CAAC;QAIV,aAAQ,GAAY,KAAK,CAAC;QAI1B,aAAQ,GAAY,KAAK,CAAC;QAK1B,YAAO,GAAY,IAAI,CAAC;QAOvB,UAAK,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC3B,QAAG,GAAG,IAAI,0DAAY,EAAE,CAAC;IAcM,CAAC;IAE1C,GAAG;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE;YACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;YACpB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;YAChE,SAAS,EAAE,IAAI,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc;SAC9E;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;YAClD,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;YACxD,OAAO,IAAI,CAAC,IAAI,CAAC;;YACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IAC5B,CAAC;;oGA1EU,0BAA0B;0GAA1B,0BAA0B;QCVvC,uEACE;QAAA,wHAsEM;QACN,uHAkBM;QACR,4DAAO;;QA1FC,0DAAc;QAAd,8EAAc;QAuEd,0DAAa;QAAb,6EAAa;;6FD9DR,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;gHAGU,IAAI;kBAAZ,mDAAK;YACG,IAAI;kBAAZ,mDAAK;YAIG,QAAQ;kBAAhB,mDAAK;YAEG,cAAc;kBAAtB,mDAAK;YAEG,QAAQ;kBAAhB,mDAAK;YAEG,WAAW;kBAAnB,mDAAK;YAGG,OAAO;kBAAf,mDAAK;YAOI,KAAK;kBAAd,oDAAM;YACG,GAAG;kBAAZ,oDAAM;;;;;;;;;;;;;;AElCT;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;IAW7E,oEAAoB;IAAA,4EAAiB;IAAA,4DAAI;;AAKpC,MAAM,kBAAkB;IAE7B;QAGS,aAAQ,GAAG,KAAK,CAAC;QAEhB,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;IALtB,CAAC;IAOjB,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACpC,CAAC;IACD,KAAK;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;;oFAjBU,kBAAkB;kGAAlB,kBAAkB;QAX/B,yEACE;QAAA,2EACA;QADmB,yIAAS,YAAQ,IAAC;QAArC,4DACA;QAAA,yEACE;QAAA,4EAA0E;QAAlE,0IAAS,WAAO,IAAC;QAAiD,4DAAC;QAAA,4DAAS;QACpF,4EAAwD;QAAA,uEAAE;QAAA,4DAAS;QACrE,4DAAM;QACN,0GAAyC;QAC3C,4DAAM;;QANkC,0DAAyB;QAAzB,oFAAyB;QAK3D,0DAAc;QAAd,8EAAc;;6FAKP,kBAAkB;cAd9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;;GAST;gBACD,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;sCAMU,QAAQ;kBAAhB,mDAAK;YAEI,MAAM;kBAAf,oDAAM;;;;;;;;;;;;;;ACvBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACa;AACG;AACM;AACwB;AACQ;AACtC;AACW;AAClB;AACX;AACH;AACqC;AACW;AACP;AAC6B;AAC9D;AACS;AAC2B;AACP;;;;AA8BxE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAVJ;YACP,uEAAa;YACb,oEAAgB;YAChB,2DAAW;YACX,sEAAgB;YAChB,6FAAuB;YACvB,wDAAY,CAAC,OAAO,EAAE;YACtB,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;YACrD,iFAAyB;SAC1B;mIAIU,SAAS,mBA1BlB,2DAAY;QACZ,wEAAe;QACf,2EAAgB;QAChB,iFAAkB;QAClB,yGAAsB;QACtB,iHAAwB;QACxB,2EAAgB;QAChB,uFAAmB;QACnB,uGAAkB;QAClB,gGAAsB;QACtB,6HAA0B;QAC1B,4FAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,2DAAW;QACX,sEAAgB;QAChB,6FAAuB,8HAGvB,iFAAyB;6FAKhB,SAAS;cA5BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,2EAAgB;oBAChB,iFAAkB;oBAClB,yGAAsB;oBACtB,iHAAwB;oBACxB,2EAAgB;oBAChB,uFAAmB;oBACnB,uGAAkB;oBAClB,gGAAsB;oBACtB,6HAA0B;oBAC1B,4FAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,2DAAW;oBACX,sEAAgB;oBAChB,6FAAuB;oBACvB,wDAAY,CAAC,OAAO,EAAE;oBACtB,gEAAiB,CAAC,aAAa,CAAC,yEAAW,CAAC,QAAQ,CAAC;oBACrD,iFAAyB;iBAC1B;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;;;;ICK/E,2FAQA;IAHA,yXAAoB;IAGpB,4DAAwB;;;IAP1B,kFAAsB;;;IAFtB,sEACE;IAAA,wJAQwB;IAC1B,4DAAM;;;IAFmB,0DAAe;IAAf,uFAAe;;;;IAKtC,2FAWA;IAHA,8XAAoB;IAGpB,4DAAwB;;;;IAV1B,mFAAsB;;;IAFtB,sEACE;IAAA,wJAWwB;IAC1B,4DAAM;;;IAFmB,0DAAe;IAAf,uFAAe;;;IAItC,yEACA;IAAA,8DAAoP;IAApP,yEAAoP;IAAA,oEAAG;IAAA,qEAA0M;IAAA,qEAAiL;IAAA,sEAA6K;IAAA,sEAAmN;IAAA,sEAAkL;IAAA,sEAAyL;IAAA,kFAAiJ;IAAA,4DAAI;IAAA,4DAAM;IAC1/C,4DAAM;;ADvBD,MAAM,kBAAkB;IAW7B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAT5B,iBAAY,GAAa,KAAK,CAAC;QAExC,gBAAW,GAA2B,EAAE,CAAC;QACzC,gBAAW,GAAyB,EAAE,CAAC;QAEvC,aAAQ,GAAa,KAAK,CAAC;QAE3B,WAAM,GAAY,KAAK,CAAC;IAEiB,CAAC;IAE1C,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,kEAAkE;QAClE,2CAA2C;QAC3C,2CAA2C;QAC3C,wBAAwB;QACxB,mCAAmC;QACnC,MAAM;QACN,OAAO;QACP,IAAG,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAE;gBAChD,IAAI,CAAC,WAAW,GAAG,IAAgB,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,IAAgB,CAAC;gBACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC;;YACG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAE;gBACjC,IAAI,CAAC,WAAW,GAAG,IAAkB,CAAC;gBACtC,IAAI,CAAC,WAAW,GAAG,IAAkB,CAAC;gBACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC;QAEF,kBAAkB;QAClB,yCAAyC;QACzC,yCAAyC;QACzC,wBAAwB;QACxB,uBAAuB;QACvB,MAAM;IAER,CAAC;IAGD,MAAM,CAAC,KAAa;QAClB,IAAG,CAAC,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;;YAClD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IACD,IAAI,CAAC,IAAI,EAAE,KAAa;QACtB,IAAG,CAAC,IAAI,CAAC,YAAY,EAAC;YACpB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,WAA0B,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;SACxD;aACG;YACF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,WAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;SACtD;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;;oFA9DU,kBAAkB;kGAAlB,kBAAkB;QCV/B,sEACE;QAGA,8GAUM;QAEN,8GAaM;QAEJ,+GAEI;QACN,4DAAM;;QA9BA,0DAA6B;QAA7B,6FAA6B;QAY7B,0DAA4B;QAA5B,4FAA4B;QAe1B,0DAAa;QAAb,6EAAa;;6FDrBV,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;yGAGU,YAAY;kBAApB,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;AAUlD,MAAM,eAAe;IAK1B,YAAoB,IAAiB,EAAU,MAAqB,EAAS,MAAe;QAAxE,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAS;QAH5F,eAAU,GAAG,aAAa,CAAC;IAGqE,CAAC;IAEjG,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,6CAA6C;QAC7C,6BAA6B;QAC7B,+BAA+B;QAC/B,4BAA4B;QAC5B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCX5B,sEACE;QAAA,sEACE;QAAA,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,yEACE;QAAA,qEACE;QAAA,qEACE;QAAA,uEAAqB;QAAA,qEAAU;QAAA,4DAAI;QACrC,4DAAK;QACL,qEACE;QAAA,wEAAmB;QAAA,mEAAO;QAAA,4DAAI;QAChC,4DAAK;QACP,4DAAK;QACP,4DAAM;QACN,0EACE;QAAA,6EACE;QADM,wIAAS,YAAQ,IAAC;QACxB,wDACF;QAAA,4DAAS;QACX,4DAAM;QAKR,4DAAM;QACR,4DAAM;;QARE,2DACF;QADE,0FACF;;6FDLO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;+OAIU,SAAS;kBAAjB,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,gFAAyC;QACzC,8EAAqD;;QAAtC,0DAAqB;QAArB,8EAAqB;;6FDMvB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEC;;;;;;;ICqB3C,yEAA4C;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;;;IAU1D,8FACkD;IADP,uYAA0B;IACnB,4DAA0B;;IADnD,0EAAiB;;ADpBrC,MAAM,sBAAsB;IAcjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAZ5C,eAAU,GAAgB,EAAE,CAAC;QAO7B,SAAI,GAAgB,EAAE,CAAC;IAKyB,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;YAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACzB,CAAC,CACA,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,EAAE;SACd,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IACD,IAAI;QACF,IAAI,GAAG,GAAW,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;QACxH,IAAI,SAAS,GAAG,IAAI,gEAAS,EAAE,CAAC;QAChC,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAErC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAGjB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;IACH,CAAC;IACD,UAAU,CAAC,CAAS;QAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,CAAS,EAAE,SAAoB;QACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC3B,CAAC;IACD,iBAAiB;QACf,2CAA2C;QAC3C,mEAAmE;QACnE,mCAAmC;QACnC,yCAAyC;QACzC,KAAK;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,cAAc,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC;iBAC3D,MAAM,CAAE,IAAmB;iBACzB,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACrC,wBAAwB;QAC1B,CAAC,CAAC;IACJ,CAAC;;4FA9EU,sBAAsB;sGAAtB,sBAAsB;QCbnC,yEAEE;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAE3B,uEACE;QAGA,4EAA+E;QAAzD,8IAAS,UAAM,IAAC;QAAyC,8EAAc;QAAA,4DAAS;QAEtG,yEACE;QAAA,yEACE;QAAA,0EAA8D;QAAA,yEAAc;QAAA,4DAAO;QACrF,4DAAM;QACN,4EAEF;QAFS,yLAAkB;QAAzB,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,2EAA8D;QAAA,uEAAW;QAAA,4DAAO;QAClF,4DAAM;QACN,4EACA;QADO,+LAAwB;QAA/B,4DACA;QAAA,+EACE;QAAA,0HAA6D;QAC7D,iEACF;QAAA,4DAAW;QACb,4DAAM;QACN,0EACE;QAAA,6EAAmC;QAAA,uEAAW;QAAA,4DAAQ;QACtD,6EAEF;QAFS,gMAAyB;QAAhC,4DAEF;QAAA,4DAAM;QACR,4DAAO;QACP,6JAC4E;QAC5E,8EAAuE;QAAzB,+IAAS,kBAAc,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAEjG,4DAAM;;QAvBO,2DAAkB;QAAlB,6EAAkB;QAOsC,0DAA+C;QAA/C,qHAA+C;QAAvG,mFAAwB;QAEJ,0DAAiB;QAAjB,uFAAiB;QAMrC,0DAAyB;QAAzB,oFAAyB;QAKZ,0DAAc;QAAd,mFAAc;;6FDrB3B,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEmB;AACX;;;AAE/D,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,2EAAgB,EAAC;IACpC,EAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,2EAAgB,EAAC;IAC7C,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,sFAAmB,EAAC;CAC/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;;;;;;ICyBnD,yEAAuC;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;;;IAuBjD,4EAEF;IAF0B,qWAA4B;IAApD,4DAEF;;;IAF0B,0FAA4B;;;;IAhD9D,yEACE;IAAA,sEACE;IAAA,yEACE;IAAA,yEACE;IAAA,2EAEF;IAFqB,iVAAkB;IAArC,4DAEF;IAAA,4DAAM;IACN,yEACE;IAIA,yEACE;IAAA,yEACE;IAAA,2EAAyD;IAAA,+DAAI;IAAA,4DAAQ;IACvE,4DAAM;IAON,4EAEA;IAFO,oVAAkB;IAAzB,4DAEA;IAAA,gFACE;IAAA,iIAAwD;IACxD,iEACF;IAAA,4DAAW;IAEb,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,2EACE;IAAA,6EAEA;IAFO,2TAAmB;IAA1B,4DAEA;IAAA,6EAAsD;IAAA,oEAAQ;IAAA,4DAAQ;IACxE,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,6EAEA;IAFO,2TAAmB;IAA1B,4DAEA;IAAA,6EAAgE;IAAA,qEAAS;IAAA,4DAAQ;IACnF,4DAAM;IACR,4DAAM;IACN,+HAEF;IAAA,4DAAM;IAOR,4DAAM;IACN,8EAAoE;IAA5D,8TAAsB;IAAsC,6DAAC;IAAA,4DAAS;IAChF,4DAAM;IACN,0EACE;IAAA,6EAEF;IAFqB,2VAAyB;IAA5C,4DAEF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IA7D2D,0DAAgB;IAAhB,yFAAgB;IAAtD,gFAAkB;IAkBmC,0DAAkC;IAAlC,2GAAkC;IAAjG,gFAAkB;IAGE,0DAAY;IAAZ,qFAAY;IASV,0DAAsB;IAAtB,oFAAsB;IASpB,0DAAsB;IAAtB,oFAAsB;IAK7C,0DAAc;IAAd,iFAAc;IAasC,0DAAuB;IAAvB,gGAAuB;IAApE,uFAAyB;;;IAgB5C,sEAAgD;IAAA,uDAAe;IAAA,4DAAM;;;IAArB,0DAAe;IAAf,gFAAe;;;IAG/D,2EAAgD;IAAA,mEAAQ;IAAA,4DAAO;;;IAC/D,2EAAgD;IAAA,uDAA6B;IAAA,4DAAO;;;IAApC,0DAA6B;IAA7B,2GAA6B;;;IAfnF,sEAGE;IAAA,yEACE;IAAA,yEACE;IAAA,uEAAM;IAAA,uDAAQ;IAAA,4DAAO;IACvB,4DAAM;IACN,yEACE;IAAA,wEAA8B;IAAA,uDAAe;IAAA,4DAAI;IACnD,4DAAM;IACN,0EACE;IAAA,yHAAqE;IACvE,4DAAM;IACN,2EACE;IAAA,6HAA+D;IAC/D,6HAAoF;IACtF,4DAAM;IAER,4DAAM;IAGR,4DAAM;;;IAhBM,0DAAQ;IAAR,4EAAQ;IAGgB,0DAAe;IAAf,mFAAe;IAGhB,0DAAiB;IAAjB,0FAAiB;IAGvC,0DAAc;IAAd,iFAAc;IACd,0DAAc;IAAd,iFAAc;;ADvEtB,MAAM,sBAAsB;IA4BjC,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QA1B5B,iBAAY,GAAY,KAAK,CAAC;QAK9B,aAAQ,GAAY,KAAK,CAAC;QAI1B,aAAQ,GAAY,KAAK,CAAC;QAK1B,YAAO,GAAY,IAAI,CAAC;QAKvB,UAAK,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC3B,QAAG,GAAG,IAAI,0DAAY,EAAE,CAAC;QAGnC,aAAQ,GAAY,KAAK,CAAC;IAGe,CAAC;IAE1C,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;YAChE,SAAS,EAAE,IAAI,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc;SAC9E;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC;iBACtD,MAAM,CAAE,IAAmB;iBACzB,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC;QACF,2CAA2C;QAE3C,KAAK;IACP,CAAC;IACD,cAAc;QACZ,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACD,QAAQ;QACN,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;;YACzD,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;;4FApEU,sBAAsB;sGAAtB,sBAAsB;QCXnC,uEACE;QAAA,oHAiEM;QACN,mHAqBM;QACR,4DAAO;;QAxFC,0DAAc;QAAd,8EAAc;QAkEd,0DAAa;QAAb,6EAAa;;6FDxDR,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;gHAGU,YAAY;kBAApB,mDAAK;YAEG,IAAI;kBAAZ,mDAAK;YACG,IAAI;kBAAZ,mDAAK;YACG,KAAK;kBAAb,mDAAK;YACG,QAAQ;kBAAhB,mDAAK;YAEG,cAAc;kBAAtB,mDAAK;YAEG,QAAQ;kBAAhB,mDAAK;YAEG,WAAW;kBAAnB,mDAAK;YAGG,OAAO;kBAAf,mDAAK;YAKI,KAAK;kBAAd,oDAAM;YACG,GAAG;kBAAZ,oDAAM;;;;;;;;;;;;;;AEjCT;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { Component, OnInit, Output } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { DataField } from '../models/data-field';\n\nimport { DataType } from '../models/data-type';\nimport { Validator } from \"validator.ts/Validator\";\nimport { ValidationErrorInterface } from 'validator.ts/ValidationErrorInterface';\n\n@Component({\n  selector: 'app-creator',\n  templateUrl: './creator.component.html',\n  styleUrls: ['./creator.component.css']\n})\nexport class CreatorComponent implements OnInit {\n\n\n  dataFields: DataField[] = [];\n  name: string;\n  description: string;\n\n  errors: ValidationErrorInterface[];\n\n  temp: DataField[] = [];\n\n\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  addField() {\n    this.dataFields.push({\n      name: \"\",\n      type: \"\",\n      description: \"\",\n      optional: false,\n      exclusive: \"\"\n    });\n    this.temp.push({\n      name: \"\",\n      type: \"\",\n      description: \"\",\n      optional: false,\n      exclusive: \"\"\n    });\n  }\n  save() {\n    let obj: DataType = { name: this.name, description: this.description, fields: this.temp }\n\n    console.log(obj);\n\n    this.dataService.addDataType(obj)\n    this.name = \"\";\n    this.description = \"\";\n    this.dataFields = [];\n    this.temp = [];\n\n  }\n  deleteItem(i: number) {\n    this.dataFields.splice(i, 1);\n    this.temp.splice(i, 1);\n  }\n\n  change(i: number, dataField: DataField) {\n    this.temp[i] = dataField;\n  }\n\n\n}\n","<div class=\"card-float\">\n\n  <h1>Create new data type:</h1>\n\n  <form>\n    <div *ngFor=\"let error of errors\" class=\"alert alert-warning\" role=\"alert\">\n      {{error.errorMessage}}\n    </div>\n  <button type=\"submit\" (click)= \"save()\" id=\"record-btn\" class=\"btn btn-success\">✓ Save changes</button>\n\n    <div class=\"name input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Name of data type</span>\n      </div>\n      <input [(ngModel)]=\"name\" type=\"text\" class=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" name=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"formGroupExampleInput\">Description</label>\n      <input [(ngModel)]=\"description\" type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" name=\"description\"\n        placeholder=\"Enter component's description here\">\n    </div>\n  </form>\n  <app-entry-list-item [display]=\"false\" (field)=\"change(i,$event)\" (del)=\"deleteItem(i)\" *ngFor=\"let dataField of dataFields;index as i\"></app-entry-list-item>\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"addField()\">+ Add Field</button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-creator></app-creator>\n<app-displayer></app-displayer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"holder\">\n  <div>\n    <span>2021. Made by Biruk Mengistu.</span>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { DataField } from 'src/app/models/data-field';\nimport { DataType } from 'src/app/models/data-type';\nimport { Method } from 'src/app/models/method';\nimport { Parameter } from 'src/app/models/parameter';\n\n@Component({\n  selector: 'app-display-list-item',\n  templateUrl: './display-list-item.component.html',\n  styleUrls: ['./display-list-item.component.css']\n})\nexport class DisplayListItemComponent implements OnInit {\n\n  @Input() data;\n  @Input() isForMethods: boolean = false;\n\n\n  @Input() dataFields: DataField[] | Parameter[];\n  @Input() name: string;\n  @Input() description: string;\n  @Input() returnType : string | string[];\n\n  @Input() display: boolean;\n\n  clickedDelete: boolean = false;\n\n  @Output() delete = new EventEmitter();\n  @Output() edit = new EventEmitter();\n\n  constructor(private toast: ToastrService) { }\n\n  ngOnInit(): void {\n    this.dataFields = this.isForMethods ?\n      (this.data as Method).parameters :\n      (this.data as DataType).fields;\n\n    if (true) {\n      let temp = this.data.parameters;\n      console.log(this.data);\n\n    }\n\n  }\n\n  editEntry() {\n\n    if (this.display) {\n      this.display = false;\n    }\n    else {\n      this.display = true;\n      this.edit.emit(\n        {\n          name: this.name,\n          description: this.description,\n          fields: this.dataFields\n        });\n      this.toast.success(\"Success\", \"Changes applied!\");\n      console.info(this.dataFields);\n    }\n  }\n\n  deleteEntry() {\n    if (this.clickedDelete) {\n      this.delete.emit();\n      this.clickedDelete = false;\n    }\n    else {\n      this.clickedDelete = true;\n    }\n\n  }\n\n  getDeleteText() {\n    return this.clickedDelete ? \"Confirm Delete?\" : \"Delete\";\n  }\n\n  update(index, dataField) {\n    this.dataFields[index] = dataField;\n  }\n\n}\n","<div class=\"card\">\n  <div *ngIf=\"!display\">\n    <div class=\"desc\">\n      <h2>\n        {{name}}\n      </h2>\n      <button type=\"button\" (click)=\"editEntry()\" id=\"edit\" class=\"btn btn-primary\">Confirm Edit</button>\n      <button type=\"button\" (click)=\"deleteEntry()\" id=\"delete\" class=\"btn btn-danger\">Delete</button>\n    </div>\n    <form>\n      <div class=\"name input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Name of component</span>\n        </div>\n        <input [(ngModel)]=\"name\" value=\"{{name}}\" type=\"text\" name=\"name\" class=\"form-control\" aria-label=\"Default\"\n          aria-describedby=\"inputGroup-sizing-default\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"formGroupExampleInput\">Description</label>\n        <input [(ngModel)]=\"description\" value=\"{{description}}\" name=\"description\" type=\"text\" class=\"form-control\"\n          id=\"formGroupExampleInput\" placeholder=\"Enter component's description here\">\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\">+ Add Component</button>\n    </form>\n    <app-entry-list-item [display] = \"display\" [name]=\"dataField.name\"  [isForMethods]=\"isForMethods\" [type]=\"dataField.type\" [optional]=\"dataField.optional\"\n      [exlusive]=\"dataField.exclusive\" (field)=\"update(i,$event)\" *ngFor=\"let dataField of dataFields; index as i\">\n    </app-entry-list-item>\n  </div>\n\n  <div *ngIf=\"display\">\n    <div *ngIf=\"display\">\n      <div class=\"desc\">\n        <h3>\n          {{name}}\n        </h3>\n        <div class=\"holder\">\n          <span class=\"alert alert-info span\" *ngIf=\"returnType\" >\n            returns {{returnType}}\n          </span>\n        </div>\n\n        <button type=\"button\" (click)=\"editEntry()\" id=\"edit\" class=\"btn btn-outline-primary\">Edit</button>\n        <button type=\"button\" (click)=\"deleteEntry()\" id=\"delete\" class=\"btn btn-outline-danger\">{{getDeleteText()}}</button>\n      </div>\n      <form>\n        <p>{{description}}</p>\n      </form>\n      <app-entry-list-item [display] = \"display\" [isForMethods]=\"isForMethods\"  [exclusiveLabel]=\"dataField.exclusive\" [name]=\"dataField.name\" [description]=\"dataField.description\" [type]=\"dataField.type\" [optional]=\"dataField.optional\"\n        [exlusive]=\"dataField.exclusive\" (field)=\"update(i,$event)\" *ngFor=\"let dataField of dataFields; index as i\">\n      </app-entry-list-item>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyD6J81nNllbPJUG9MKySvzniSrJbnYs9CE\",\n    authDomain: \"api-parser-1e98e.firebaseapp.com\",\n    databaseURL: \"https://api-parser-1e98e-default-rtdb.firebaseio.com\",\n    projectId: \"api-parser-1e98e\",\n    storageBucket: \"api-parser-1e98e.appspot.com\",\n    messagingSenderId: \"859023123920\",\n    appId: \"1:859023123920:web:8ee9c81dabc2e228cb85d5\",\n    measurementId: \"G-KGF2DF3MN1\"\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FIREBASE_OPTIONS } from '@angular/fire';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { DataField } from './models/data-field';\nimport { DataType } from './models/data-type';\nimport { Method } from './models/method';\n\nconst dataTypeUrl = \"https://api.npoint.io/89a2609d802c75878470\";\nconst methodsUrl = \"https://api.npoint.io/89a2609d802c75878470\";\nconst headers = {\n  headers: new HttpHeaders()\n    .set('content-type', 'application/json')\n    .set('versioning', 'false')\n    .set('secret-key', '$2b$10$u1qoNjCM1jf30vkZ/yfxzO98wP9DhhoJrJnM7MoaQXFovMUkFtc4y')\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  downloadToFile(slash : string) {\n      const blob = new Blob([JSON.stringify(slash.includes(\"methods\") ? this.methods : this.dataTypes)], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url);\n  }\n\n  dataTypes: DataType[];\n  methods: Method[];\n\n  constructor(private http: HttpClient, private database: AngularFireDatabase) { }\n\n  getDataTypes(): DataType[] {\n    return this.dataTypes;\n  }\n\n  load() {\n    this.database.object(\"test\").valueChanges()\n      .subscribe(data => {\n        console.log(data)\n      })\n  }\n\n  loadDataTypes(fun?: (n: any[]) => any) {\n    return this.database.list(\"datatypes\").valueChanges()\n      .subscribe(data => {\n        this.dataTypes = data as DataType[];\n        fun(data)\n      })\n  }\n\n  async uploadDataTypes() {\n    console.log(JSON.stringify(this.dataTypes));\n    return this.database.object(\"datatypes\")\n      .set(JSON.parse(JSON.stringify(this.dataTypes)))\n\n    // return await this.http.put<DataType[]>(dataTypeUrl, JSON.stringify(this.dataTypes), headers)\n    //   .toPromise().then(data => {\n    //     console.log(data);\n    //     return data;\n    //   });\n  }\n\n  editDataType(index: number, dataType: DataType) {\n    this.dataTypes.splice(index, 1, dataType);\n    console.log(dataType);\n    this.uploadDataTypes();\n\n  }\n  addDataType(x: DataType) {\n    this.dataTypes = [x, ...this.dataTypes]\n    this.uploadDataTypes();\n  }\n  deleteDataType(index: number) {\n    this.dataTypes.splice(index, 1);\n    console.log(\"Deleted!\");\n    this.uploadDataTypes();\n  }\n\n  getMethods(): Method[] {\n    return this.methods;\n  }\n\n  // -------------- Methods start here-------------//\n\n  async loadMethods(fun?: (data: any) => any) {\n    return this.database.list(\"methods\").valueChanges()\n      .subscribe(data => {\n        this.methods = data as Method[];\n        fun(data)\n      })\n    // return await this.http.get<Method[]>(methodsUrl, headers)\n    //   .toPromise().then(data => {\n    //     console.log(data);\n    //     this.methods = data;\n    //     return data;\n    //   });\n  }\n\n  async uploadMethods() {\n    console.log(JSON.stringify(this.methods));\n    return this.database.object(\"methods\")\n      .set(JSON.parse(JSON.stringify(this.methods)))\n  }\n\n  editMethod(index: number, method: Method) {\n    this.methods.splice(index, 1, method);\n    console.log(method);\n    this.uploadMethods();\n\n  }\n  addMethod(x: Method) {\n    this.methods.unshift(x);\n    this.uploadMethods();\n\n  }\n  deleteMethod(index: number) {\n    this.methods.splice(index, 1);\n    console.log(\"Deleted!\");\n    this.uploadMethods();\n\n  }\n  getParameterTypes(fun: (data, loader) => any) {\n    this.loadDataTypes(data => {\n      let toBeChanged = [\"String\", \"Integer\", \"Boolean\", \"True\"]\n        .concat(\n          (data as DataType[])\n            .map(dataType => dataType.name)\n\n        ).sort((a, b) => a === b ? 0 : (a > b ? 1 : -1))\n      fun(toBeChanged, true)\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  dataTypes: boolean;\n  title = 'api-parser';\n  constructor(private router: Router) {\n    // router.events.subscribe((url:any) => console.log(url));\n  }\n  ngOnInit(): void {\n    this.refreshPage();\n  }\n  refreshPage() {\n    this.dataTypes = this.router.url === '/' || this.router.url === '/datatypes';\n  }\n}\n","<div style=\"min-height: 100%;background-color: #edf2f9;\">\n  <app-navbar [dataTypes]=\"dataTypes\"></app-navbar>\n  <div style=\"padding: 48px 48px 48px 48px;background-color: #edf2f9;\">\n    <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DataService } from 'src/app/data.service';\nimport { DataType } from 'src/app/models/data-type';\nimport { Parameter } from 'src/app/models/parameter';\n\n@Component({\n  selector: 'app-parameter-list-item',\n  templateUrl: './parameter-list-item.component.html',\n  styleUrls: ['./parameter-list-item.component.css']\n})\nexport class ParameterListItemComponent implements OnInit {\n\n  @Input() name: string;\n  @Input() type = [];\n\n  tempType: string;\n\n  @Input() optional: boolean = false;\n\n  @Input() exclusiveLabel: string;\n\n  @Input() exlusive: boolean = false;\n\n  @Input() description: string;\n\n\n  @Input() display: boolean = true;\n\n  parameterTypes: string[];\n\n  finished : boolean;\n\n\n  @Output() field = new EventEmitter();\n  @Output() del = new EventEmitter();\n\n  current: Parameter;\n\n  // datatypes: string[] = [\n  //   \"String\", \"Boolean\",\n  //   \"Integer\", \"User\",\n  //   \"Chat\", \"ChatPhoto\",\n  //   \"ChatPermissions\", \"ChatLocation\",\n  //   \"Animation\", \"Audio\",\n  //   \"\", \"\",\n  //   \"\", \"\",\n  //   \"\", \"\",\n  // ]\n  constructor(private data: DataService) { }\n\n  add() {\n    this.type.unshift(this.tempType);\n    this.tempType = \"\";\n  }\n\n  ngOnInit(): void {\n    this.data.getParameterTypes((data,status)=>{\n      this.parameterTypes = data;\n      this.finished = status;\n    });\n  }\n\n  deleteItem() {\n    this.del.emit(\"\");\n  }\n  update() {\n    this.current = {\n      name: this.name,\n      type: this.getType(),\n      description: this.description,\n      optional: this.optional == undefined ? undefined : this.optional,\n      exclusive: this.exclusiveLabel == undefined ? undefined : this.exclusiveLabel\n    }\n    console.log(this.current);\n\n    this.field.emit(this.current)\n  }\n\n  getType(): string | string[] {\n    if (this.type.length > 0 && this.tempType.length > 0)\n      return [...this.type, this.tempType];\n    else if (this.type.length > 0 && this.tempType.length == 0)\n      return this.type;\n    else return this.tempType;\n  }\n\n}\n","<form>\n  <div *ngIf=\"!display\" class=\"card\">\n    <div>\n      <div class=\"form-row\">\n        <div class=\"col\">\n          <input type=\"text\" [(ngModel)]=\"name\" (keyup)=\"update()\" value=\"{{name}}\" name=\"name\" class=\"form-control\"\n            placeholder=\"Parameter name\">\n        </div>\n        <div class=\"col\">\n          <!-- <select (change)=\"update()\" [(ngModel)] = \"type\" name=\"type\" class=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\" style=\"margin: 0px;\">\n          <option value=\"0\" selected disabled hidden>Data type</option>\n          <option *ngFor=\"let data of datatypes;index as in\" value=\"{{in}}\">{{data}}</option>\n        </select> -->\n\n          <div class=\"input-group mb-3\" style=\"margin-bottom: 0px!important;\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">Type<span id=\"counter\" *ngIf=\"type.length>0\">\n                  ({{type.length}})</span></label>\n            </div>\n            <input [(ngModel)]=\"tempType\" list=\"types\" (keyup)=\"update()\" name=\"type\" placeholder=\"{{!finished ? '':''}}\"\n              class=\"form-control\">\n            <datalist id=\"types\">\n              <option *ngFor=\"let type of parameterTypes\">{{type}}</option>\n              ...\n            </datalist>\n            <div class=\"input-group-append\">\n              <button (click)=\"add()\" class=\"btn btn-outline-secondary\" type=\"button\">+</button>\n            </div>\n            <!-- <select value=\"datatypes.indexOf(type)\" (change)=\"update()\" [(ngModel)]=\"type\" name=\"type\" style=\"margin: 0px;\" class=\"custom-select\"\n              >\n              <option value=\"0\" selected disabled hidden>Data type</option>\n              <option *ngFor=\"let data of datatypes;index as in\" value=\"{{in}}\">{{data}}</option>\n            </select> -->\n          </div>\n        </div>\n        <div class=\"col\" class=\"checkboxes\">\n          <div class=\"form-check form-check-inline\">\n            <div class=\"input-group-text desc\">\n              <input (change)=\"update()\" [(ngModel)]=\"optional\" name=\"optionals\" class=\"form-check-input\"\n                type=\"checkbox\" value=\"option1\">\n              <label class=\"form-check-label\" for=\"inlineCheckbox1\">Optional</label>\n            </div>\n          </div>\n\n          <div class=\"input-group mb-3 form-check\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text desc\">\n                <input (change)=\"update()\" [(ngModel)]=\"exlusive\" name=\"exlusives\" class=\"form-check-input exclusive\"\n                  type=\"checkbox\" value=\"option2\">\n                <label class=\"form-check-label exc-label\" for=\"inlineCheckbox2\">Exclusive</label>\n              </div>\n            </div>\n            <input *ngIf=\"exlusive\" [(ngModel)]=\"exclusiveLabel\" (keyup)=\"update()\" name=\"exclusiveLabel\"\n              value=\"exclusiveLabel\" type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\">\n          </div>\n\n          <!-- <div class=\"form-check form-check-inline\">\n            <input (change)=\"update()\" [(ngModel)]=\"exlusive\" name=\"exlusives\" class=\"form-check-input\" type=\"checkbox\"\n              id=\"inlineCheckbox2\" value=\"option2\">\n            <label class=\"form-check-label\" for=\"inlineCheckbox2\">Exclusive</label>\n          </div> -->\n        </div>\n        <button (click)=\"deleteItem()\" type=\"button\" class=\"btn btn-danger\">X</button>\n      </div>\n\n      <div class=\"form-row \">\n        <input type=\"text\" [(ngModel)]=\"description\" (keyup)=\"update()\" value=\"{{description}}\" name=\"description\"\n          class=\"form-control full-description\" placeholder=\"Description\">\n      </div>\n\n    </div>\n  </div>\n  <div *ngIf=\"display\">\n\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <code>{{name}}</code>\n      </div>\n      <div class=\"col\">\n        <p class=\"font-weight-normal\">{{description}}</p>\n      </div>\n      <div style=\"width: 100px;\">\n        <kbd>{{type}}</kbd>\n      </div>\n      <div style=\"width: 200px;\">\n        <span *ngIf=\"optional\" class=\"badge badge-dark\">Optional</span>\n        <span *ngIf=\"exlusive\" class=\"badge badge-dark\">Exclusive({{exclusiveLabel}})</span>\n      </div>\n    </div>\n\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-search-box',\n  template: `\n<div class=\"input-group\" style=\"margin: 30px 0px 0px 0px\">\n  <input type=\"text\" (keyup)=\"update()\" [(ngModel)]=\"searchQuery\" name=\"searchQuery\" class=\"form-control\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n  <div class=\"input-group-append\">\n    <button (click)=\"clear()\" class=\"btn btn-outline-secondary\" type=\"button\">X</button>\n    <button class=\"btn btn-outline-secondary\" type=\"button\">🔍</button>\n  </div>\n  <p *ngIf=\"noResult\">No results found.</p>\n</div>\n  `,\n  styleUrls: ['./search-box.component.css']\n})\nexport class SearchBoxComponent implements OnInit {\n\n  constructor() { }\n\n  searchQuery: string;\n  @Input() noResult = false;\n\n  @Output() search = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  update() {\n    this.search.emit(this.searchQuery)\n  }\n  clear(){\n    this.searchQuery = \"\";\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CreatorComponent } from './creator/creator.component';\nimport { DisplayerComponent } from './displayer/displayer.component';\nimport { EntryListItemComponent } from './creator/entry-list-item/entry-list-item.component';\nimport { DisplayListItemComponent } from './displayer/display-list-item/display-list-item.component';\nimport { ContentComponent } from './content/content.component';\nimport { ContentTwoComponent } from './content-two/content-two.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchBoxComponent } from './smaller-components/search-box/search-box.component';\nimport { MethodCreatorComponent } from './method-creator/method-creator.component';\nimport { ParameterListItemComponent } from './method-creator/parameter-list-item/parameter-list-item.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport {AngularFireDatabase, AngularFireDatabaseModule} from '@angular/fire/database';\nimport { FooterComponent } from './smaller-components/footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CreatorComponent,\n    DisplayerComponent,\n    EntryListItemComponent,\n    DisplayListItemComponent,\n    ContentComponent,\n    ContentTwoComponent,\n    SearchBoxComponent,\n    MethodCreatorComponent,\n    ParameterListItemComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { DataType } from '../models/data-type';\nimport { Method } from '../models/method';\n\n@Component({\n  selector: 'app-displayer',\n  templateUrl: './displayer.component.html',\n  styleUrls: ['./displayer.component.css']\n})\nexport class DisplayerComponent implements OnInit, OnChanges {\n\n  @Input() isForMethods : boolean = false;\n\n  displayData : DataType[] | Method[] = [];\n  displayTemp:DataType[] | Method[] = [];\n\n  noResult : boolean = false;\n\n  loaded: boolean = false;\n\n  constructor(private data: DataService) { }\n\n  ngOnChanges(): void {\n    this.displayData = this.isForMethods ?\n    this.data.getMethods() :\n    this.data.getDataTypes();\n  }\n\n  ngOnInit(): void {\n    // if(!this.isForMethods) this.data.loadDataTypes().then(data => {\n    //   this.displayData = data as DataType[];\n    //   this.displayTemp = data as DataType[];\n    //   this.loaded = true;\n    //   console.log(this.displayData);\n    // });\n    // else\n    if(this.isForMethods) this.data.loadMethods(data=>{\n      this.displayData = data as Method[];\n      this.displayTemp = data as Method[];\n      this.loaded = true;\n    })\n    else this.data.loadDataTypes(data=>{\n      this.displayData = data as DataType[];\n      this.displayTemp = data as DataType[];\n      this.loaded = true;\n    })\n\n    // .then(data => {\n    //   this.displayData = data as Method[];\n    //   this.displayTemp = data as Method[];\n    //   this.loaded = true;\n    //   console.log(data);\n    // });\n\n  }\n\n\n  delete(index: number) {\n    if(!this.isForMethods) this.data.deleteDataType(index);\n    else this.data.deleteMethod(index);\n  }\n  edit(data, index: number) {\n    if(!this.isForMethods){\n      this.data.editDataType(index, data);\n      (this.displayData as DataType[]).splice(index, 1, data)\n    }\n    else{\n      this.data.editMethod(index, data);\n      (this.displayData as Method[]).splice(index, 1, data)\n    }\n    console.log(this.displayData);\n  }\n}\n","<div>\n  <!-- <div style=\"margin: auto; width: 300px;\">\n    <app-search-box [noResult]=\"noResult\" (search)=\"search($event)\"></app-search-box>\n  </div> -->\n  <div *ngIf=\"displayTemp.length == 0\">\n    <app-display-list-item\n  [name]=\"dataType.name\"\n   [description]=\"dataType.description\"\n    [dataFields]=\"dataType.fields\"\n    [display]=\"true\"\n    (delete)=\"delete(i)\"\n     (edit)=\"edit($event,i)\"\n      *ngFor=\"let dataType of displayData;index as i\">\n    </app-display-list-item>\n  </div>\n\n  <div *ngIf=\"displayTemp.length > 0\">\n    <app-display-list-item\n  [name]=\"dataType.name\"\n   [description]=\"dataType.description\"\n    [dataFields]=\"dataType.fields\"\n    [display]=\"true\"\n    [isForMethods]=\"isForMethods\"\n    [data]=\"dataType\"\n    [returnType]=\"dataType.returnType\"\n    (delete)=\"delete(i)\"\n     (edit)=\"edit($event,i)\"\n      *ngFor=\"let dataType of displayTemp;index as i\">\n    </app-display-list-item>\n  </div>\n\n    <div *ngIf=\"!loaded\" id=\"holder\" class=\"card\">\n    <svg style=\"margin: auto auto auto auto;\"  xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 128 128\" xml:space=\"preserve\"><g><path d=\"M.6 57.54c5.73-6.23 17.33-15.5 33.66-12.35C55.4 48.5 64 63.95 64 63.95S42.42 65 30.28 83.63a38.63 38.63 0 0 0-3.4 32.15 64.47 64.47 0 0 1-5.52-4.44A63.64 63.64 0 0 1 .6 57.54z\" fill=\"#ffcb02\"/><path d=\"M65.32 29.05c7.65 19.98-1.44 35.18-1.44 35.18S52.2 46.05 30.03 44.85A38.6 38.6 0 0 0 .56 57.93 63.8 63.8 0 0 1 37.56 6c8.2 1.8 22.26 7.16 27.76 23.05z\" fill=\"#ff9e02\"/><path d=\"M94.92 47.7c-13.48 16.63-31.2 16.36-31.2 16.36s9.92-19.2-.13-39a38.6 38.6 0 0 0-26.18-19 63.78 63.78 0 0 1 63.52 6.03c2.56 8 4.98 22.85-6.05 35.6z\" fill=\"#ff4b42\"/><path d=\"M93.52 82.53C72.38 79.17 63.75 63.7 63.75 63.7s21.6-1.02 33.7-19.63a38.6 38.6 0 0 0 3.43-32.04 64.33 64.33 0 0 1 5.74 4.6 63.63 63.63 0 0 1 20.82 53.26c-5.62 6.2-17.34 15.8-33.94 12.6z\" fill=\"#c063d6\"/><path d=\"M62.5 99c-7.65-19.98 1.44-35.17 1.44-35.17S75.56 81.6 97.74 82.8a39.1 39.1 0 0 0 29.73-13.03 63.8 63.8 0 0 1-37.16 52.3c-8.2-1.8-22.25-7.15-27.8-23.06z\" fill=\"#17a4f6\"/><path d=\"M26.64 115.63C24 107.6 21.6 93.06 32.5 80.5c13.48-16.62 31.58-16.55 31.58-16.55s-9.6 19.06.44 38.86a38.82 38.82 0 0 0 26.05 19.17 63.78 63.78 0 0 1-63.93-6.3z\" fill=\"#4fca24\"/><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2700ms\" repeatCount=\"indefinite\"></animateTransform></g></svg>\n  </div>\n  </div>\n","import { i18nMetaToJSDoc } from '@angular/compiler/src/render3/view/i18n/meta';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  buttonText = \"Export JSON\";\n  @Input() dataTypes: boolean;\n\n  constructor(private data: DataService, private toastr: ToastrService,private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  upload() {\n    // this.buttonText = \"Uploading dataTypes...\"\n    // this.data.uploadMethods();\n    // this.data.uploadDataTypes();\n    // this.data.uploadMethods()\n    this.data.downloadToFile(this.router.url);\n  }\n\n\n}\n","<nav>\n  <div>\n    <h1>API Parser</h1>\n    <div class=\"nav-center\">\n      <ul>\n        <li>\n          <a href=\"/datatypes\">Data Types</a>\n        </li>\n        <li>\n          <a href=\"/methods\">Methods</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"nav-options\">\n      <Button (click)=\"upload()\" class=\"export btn\">\n        {{buttonText}}\n      </Button>\n    </div>\n    <!-- <div class=\"profile\">\n      <img class=\"pic\" src=\"./assets/profile-circle.png\"/>\n      <span>Made by Biruk</span>\n    </div> -->\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content-two',\n  templateUrl: './content-two.component.html',\n  styleUrls: ['./content-two.component.css']\n})\nexport class ContentTwoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-method-creator></app-method-creator>\n<app-displayer [isForMethods]=\"true\"></app-displayer>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidationErrorInterface } from 'validator.ts/ValidationErrorInterface';\nimport { Validator } from 'validator.ts/Validator';\nimport { DataService } from '../data.service';\nimport { DataType } from '../models/data-type';\nimport { Method } from '../models/method';\nimport { Parameter } from '../models/parameter';\n\n@Component({\n  selector: 'app-method-creator',\n  templateUrl: './method-creator.component.html',\n  styleUrls: ['./method-creator.component.css']\n})\nexport class MethodCreatorComponent implements OnInit {\n\n  parameters: Parameter[] = [];\n  name: string;\n  description: string;\n  returnType: string | string[];\n\n  errors: ValidationErrorInterface[];\n\n  temp: Parameter[] = [];\n  parameterTypes: string[];\n\n  finished : boolean;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataService.getParameterTypes((data, status) => {\n      this.parameterTypes = data;\n      this.finished = status;\n    }\n    );\n  }\n\n  addParameter() {\n    this.parameters.push({\n      name: \"\",\n      type: [],\n      description: this.description,\n      optional: false,\n      exclusive: \"\"\n    });\n    this.temp.push({\n      name: \"\",\n      type: [],\n      description: this.description,\n      optional: false,\n      exclusive: \"\"\n    });\n  }\n  save() {\n    let obj: Method = { name: this.name, description: this.description, parameters: this.temp, returnType: this.returnType }\n    let validator = new Validator();\n    let errors = validator.validate(obj);\n\n    console.log(obj);\n\n\n    if (errors.length == 0) {\n      this.dataService.addMethod(obj)\n      this.name = \"\";\n      this.description = \"\";\n      this.parameters = [];\n      this.temp = [];\n    } else {\n      this.errors = errors;\n    }\n  }\n  deleteItem(i: number) {\n    this.parameters.splice(i, 1);\n    this.temp.splice(i, 1);\n  }\n\n  change(i: number, parameter: Parameter) {\n    this.temp[i] = parameter;\n  }\n  getParameterTypes() {\n    // this.data.loadDataTypes().then(data => {\n    //   this.parameterTypes = [\"String\", \"Integer\", \"Boolean\", \"True\"]\n    //     .concat((data as DataType[])\n    //       .map(dataType => dataType.name))\n    // })\n    this.dataService.loadDataTypes(data => {\n      this.parameterTypes = [\"String\", \"Integer\", \"Boolean\", \"True\"]\n        .concat((data as DataType[])\n          .map(dataType => dataType.name));\n      // this.finished = true;\n    })\n  }\n}\n","<div class=\"card-float\">\n\n  <h1>Create new method:</h1>\n\n  <form>\n    <!-- <div *ngFor=\"let error of errors\" class=\"alert alert-warning\" role=\"alert\">\n      {{error.errorMessage}}\n    </div> -->\n    <button type=\"submit\" (click)=\"save()\" id=\"record-btn\" class=\"btn btn-success\">✓ Save changes</button>\n\n    <div class=\"name input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Name of method</span>\n      </div>\n      <input [(ngModel)]=\"name\" type=\"text\" class=\"form-control\" aria-label=\"Default\"\n        aria-describedby=\"inputGroup-sizing-default\" name=\"name\">\n    </div>\n    <div class=\"name input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Return Type</span>\n      </div>\n      <input [(ngModel)]=\"returnType\" list=\"types\" name=\"returnType\" placeholder=\"{{!finished ? 'Loading...' : ''}}\" class=\"form-control\">\n      <datalist id=\"types\">\n        <option *ngFor=\"let type of parameterTypes\">{{type}}</option>\n        ...\n      </datalist>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"formGroupExampleInput\">Description</label>\n      <input [(ngModel)]=\"description\" type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" name=\"description\"\n        placeholder=\"Enter component's description here\">\n    </div>\n  </form>\n  <app-parameter-list-item [display]=\"false\" (field)=\"change(i,$event)\" (del)=\"deleteItem(i)\"\n    *ngFor=\"let parameter of parameters;index as i\"></app-parameter-list-item>\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"addParameter()\">+ Add Parameter</button>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ContentTwoComponent } from './content-two/content-two.component';\nimport { ContentComponent } from './content/content.component';\n\nconst routes: Routes = [\n  {path:'',component:ContentComponent},\n  {path:'datatypes',component:ContentComponent},\n  {path:'methods',component:ContentTwoComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { EventEmitter } from '@angular/core';\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { DataService } from 'src/app/data.service';\nimport { DataField } from 'src/app/models/data-field';\nimport { DataType } from 'src/app/models/data-type';\n\n@Component({\n  selector: 'app-entry-list-item',\n  templateUrl: './entry-list-item.component.html',\n  styleUrls: ['./entry-list-item.component.css']\n})\nexport class EntryListItemComponent implements OnInit {\n\n  @Input() isForMethods: boolean = false;\n\n  @Input() name: string;\n  @Input() type;\n  @Input() index;\n  @Input() optional: boolean = false;\n\n  @Input() exclusiveLabel: string;\n\n  @Input() exlusive: boolean = false;\n\n  @Input() description: string;\n\n\n  @Input() display: boolean = true;\n\n  displayedTypes: string[];\n\n\n  @Output() field = new EventEmitter();\n  @Output() del = new EventEmitter();\n\n  current: DataField;\n  finished: boolean = false;\n\n  datatypes: string[];\n  constructor(private data: DataService) { }\n\n  ngOnInit(): void {\n    this.getParameterTypes();\n    this.getTypes();\n  }\n\n  deleteItem() {\n    this.del.emit(\"\");\n  }\n  update() {\n    this.current = {\n      name: this.name,\n      type: this.type,\n      description: this.description,\n      optional: this.optional == undefined ? undefined : this.optional,\n      exclusive: this.exclusiveLabel == undefined ? undefined : this.exclusiveLabel\n    }\n    console.log(this.current);\n\n    this.field.emit(this.current)\n  }\n\n  getParameterTypes() {\n    this.data.loadDataTypes(data => {\n      this.datatypes = [\"String\", \"Integer\", \"Boolean\", \"True\"]\n        .concat((data as DataType[])\n          .map(dataType => dataType.name));\n      this.finished = true;\n    })\n    // this.data.loadDataTypes().then(data => {\n\n    // })\n  }\n  getLoadingText() {\n    return !this.finished ? \"Loading...\" : \"\";\n  }\n  getTypes() {\n    if (Array.isArray(this.type)) this.displayedTypes = this.type;\n    else this.displayedTypes = [this.type];\n  }\n}\n","<form>\n  <div *ngIf=\"!display\" class=\"card\">\n    <div>\n      <div class=\"form-row\">\n        <div class=\"col\">\n          <input type=\"text\" [(ngModel)]=\"name\" (keyup)=\"update()\" value=\"{{name}}\" name=\"name\" class=\"form-control\"\n            placeholder=\"Field name\">\n        </div>\n        <div class=\"col\">\n          <!-- <select (change)=\"update()\" [(ngModel)] = \"type\" name=\"type\" class=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\" style=\"margin: 0px;\">\n          <option value=\"0\" selected disabled hidden>Data type</option>\n          <option *ngFor=\"let data of datatypes;index as in\" value=\"{{in}}\">{{data}}</option>\n        </select> -->\n          <div class=\"input-group mb-3\" style=\"margin-bottom: 0px!important;\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">Type</label>\n            </div>\n            <!-- <select value=\"datatypes.indexOf(type)\" (change)=\"update()\" [(ngModel)]=\"type\" name=\"type\"\n              style=\"margin: 0px;\" class=\"custom-select\">\n              <option value=\"0\" selected disabled hidden>Data type</option>\n              <option *ngFor=\"let data of datatypes;index as in\" value=\"{{in}}\">{{data}}</option>\n            </select> -->\n\n            <input [(ngModel)]=\"type\" list=\"types\" (keyup)=\"update()\" name=\"type\" placeholder=\"{{getLoadingText()}}\"\n              class=\"form-control\">\n            <datalist id=\"types\">\n              <option *ngFor=\"let type of datatypes\">{{type}}</option>\n              ...\n            </datalist>\n\n          </div>\n        </div>\n        <div class=\"col\" class=\"checkboxes\">\n          <div class=\"form-check form-check-inline\">\n            <div class=\"input-group-text desc\">\n              <input (change)=\"update()\" [(ngModel)]=\"optional\" name=\"optionals\" class=\"form-check-input\"\n                type=\"checkbox\" value=\"option1\">\n              <label class=\"form-check-label\" for=\"inlineCheckbox1\">Optional</label>\n            </div>\n          </div>\n\n          <div class=\"input-group mb-3 form-check\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text desc\">\n                <input (change)=\"update()\" [(ngModel)]=\"exlusive\" name=\"exlusives\" class=\"form-check-input exclusive\"\n                  type=\"checkbox\" value=\"option2\">\n                <label class=\"form-check-label exc-label\" for=\"inlineCheckbox2\">Exclusive</label>\n              </div>\n            </div>\n            <input *ngIf=\"exlusive\" [(ngModel)]=\"exclusiveLabel\" (keyup)=\"update()\" name=\"exclusiveLabel\"\n              value=\"exclusiveLabel\" type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\">\n          </div>\n\n          <!-- <div class=\"form-check form-check-inline\">\n            <input (change)=\"update()\" [(ngModel)]=\"exlusive\" name=\"exlusives\" class=\"form-check-input\" type=\"checkbox\"\n              id=\"inlineCheckbox2\" value=\"option2\">\n            <label class=\"form-check-label\" for=\"inlineCheckbox2\">Exclusive</label>\n          </div> -->\n        </div>\n        <button (click)=\"deleteItem()\" type=\"button\" class=\"btn btn-danger\">X</button>\n      </div>\n      <div class=\"form-row\">\n        <input type=\"text\" [(ngModel)]=\"description\" (keyup)=\"update()\" value=\"{{description}}\" name=\"description\"\n          class=\"form-control full-description\" placeholder=\"Description\">\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"display\">\n\n\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <code>{{name}}</code>\n      </div>\n      <div class=\"col\">\n        <p class=\"font-weight-normal\">{{description}}</p>\n      </div>\n      <div style=\"width: 300px;\">\n        <kbd *ngFor=\"let typeElement of displayedTypes\">{{typeElement}}</kbd>\n      </div>\n      <div style=\"width: 200px;\">\n        <span *ngIf=\"optional\" class=\"badge badge-dark\">Optional</span>\n        <span *ngIf=\"exlusive\" class=\"badge badge-dark\">Exclusive({{exclusiveLabel}})</span>\n      </div>\n\n    </div>\n\n\n  </div>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}